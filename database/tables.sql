-- Database creation
CREATE DATABASE IF NOT EXISTS gameord;
USE gameord;

-- USER table - Stores authentication information
CREATE TABLE IF NOT EXISTS USUARIO (
    IDUSUARIO INT AUTO_INCREMENT,
    USUARIO VARCHAR(50) NOT NULL UNIQUE,
    HASH_PASSWORD VARCHAR(255) NOT NULL,
    NOMBRE VARCHAR(50),
    APELLIDOS VARCHAR(100),
    CORREO VARCHAR(100) UNIQUE,
    URL_FOTO VARCHAR(255),
    TEMA ENUM('oscuro','claro') DEFAULT 'claro',
    BIO TEXT,
    FECHA_ACTUALIZACION DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FECHA_REGISTRO DATETIME DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (IDUSUARIO)
);
-- Adding necessary columns to usuario table
ALTER TABLE usuario
    -- ADD COLUMN REMEMBER_TOKEN VARCHAR(255) NULL,
    -- ADD COLUMN TOKEN_EXPIRY DATETIME NULL,
    ADD COLUMN NOMBRE VARCHAR(50),
    ADD COLUMN APELLIDOS VARCHAR(100),
    ADD COLUMN CORREO VARCHAR(100) UNIQUE,
    ADD COLUMN URL_FOTO VARCHAR(255),
    ADD COLUMN TEMA ENUM('oscuro','claro') DEFAULT 'claro',
    ADD COLUMN BIO TEXT,
    ADD COLUMN FECHA_ACTUALIZACION DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP;

-- CATEGORIES table - Catalog of game categories
CREATE TABLE IF NOT EXISTS CATEGORIAS (
    ID_CATEGORIA INT AUTO_INCREMENT,
    CATEGORIA VARCHAR(50) NOT NULL UNIQUE,
    PRIMARY KEY (ID_CATEGORIA)
);

-- COMPANIES table - Catalog of game companies
CREATE TABLE IF NOT EXISTS COMPAÑIAS (
    ID_COMPAÑIA INT AUTO_INCREMENT,
    COMPAÑIA VARCHAR(100) NOT NULL UNIQUE,
    PRIMARY KEY (ID_COMPAÑIA)
);

-- GAMES table - Game catalog
CREATE TABLE IF NOT EXISTS JUEGOS (
    IDJUEGO INT AUTO_INCREMENT,
    JUEGO VARCHAR(100) NOT NULL,
    ID_CATEGORIA INT,
    ID_COMPAÑIA INT,
    DESCRIPCION TEXT,
    URL_IMAGEN VARCHAR(255),
    PRIMARY KEY (IDJUEGO),
    FOREIGN KEY (ID_CATEGORIA) REFERENCES CATEGORIAS(ID_CATEGORIA) ON DELETE SET NULL,
    FOREIGN KEY (ID_COMPAÑIA) REFERENCES COMPAÑIAS(ID_COMPAÑIA) ON DELETE SET NULL
);

-- USER_POSTS table - Stores user posts
CREATE TABLE IF NOT EXISTS PUBLICACIONES_USUARIOS (
    ID_PUBLICACION INT AUTO_INCREMENT,
    IDUSUARIO INT NOT NULL,
    URL VARCHAR(255),
    CONTENIDO TEXT,
    IDJUEGO INT,
    FECHA_CREACION DATETIME DEFAULT CURRENT_TIMESTAMP,
    FECHA_ACTUALIZACION DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (ID_PUBLICACION),
    FOREIGN KEY (IDUSUARIO) REFERENCES USUARIO(IDUSUARIO) ON DELETE CASCADE,
    FOREIGN KEY (IDJUEGO) REFERENCES JUEGOS(IDJUEGO) ON DELETE SET NULL
);

-- USER_GAMES table - Relationship between users and games (user's game collection)
CREATE TABLE IF NOT EXISTS USUARIOS_JUEGOS (
    IDUSUARIO INT,
    IDJUEGO INT,
    PRIMARY KEY (IDUSUARIO, IDJUEGO),
    FOREIGN KEY (IDUSUARIO) REFERENCES USUARIO(IDUSUARIO) ON DELETE CASCADE,
    FOREIGN KEY (IDJUEGO) REFERENCES JUEGOS(IDJUEGO) ON DELETE CASCADE
);

-- REACTIONS table - Catalog of possible reactions (like, love, etc.)
CREATE TABLE IF NOT EXISTS REACCIONES (
    ID_REACCION INT AUTO_INCREMENT,
    REACCION VARCHAR(20) NOT NULL UNIQUE,
    EMOJI VARCHAR(10),
    PRIMARY KEY (ID_REACCION)
);

-- INTERACTIONS table - Unifies likes, saves, and reactions
CREATE TABLE IF NOT EXISTS INTERACCIONES (
    ID_INTERACCION INT AUTO_INCREMENT,
    ID_PUBLICACION INT NOT NULL,
    IDUSUARIO INT NOT NULL,
    TIPO ENUM('like', 'guardar', 'reaccion') NOT NULL,
    ID_REACCION INT,
    FECHA_INTERACCION DATETIME DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (ID_INTERACCION),
    UNIQUE KEY UC_INTERACCION (ID_PUBLICACION, IDUSUARIO, TIPO),
    FOREIGN KEY (ID_PUBLICACION) REFERENCES PUBLICACIONES_USUARIOS(ID_PUBLICACION) ON DELETE CASCADE,
    FOREIGN KEY (IDUSUARIO) REFERENCES USUARIO(IDUSUARIO) ON DELETE CASCADE,
    FOREIGN KEY (ID_REACCION) REFERENCES REACCIONES(ID_REACCION) ON DELETE SET NULL
);

-- COMMENTS table - Stores post comments
CREATE TABLE IF NOT EXISTS COMENTARIOS (
    ID_COMENTARIO INT AUTO_INCREMENT,
    ID_PUBLICACION INT NOT NULL,
    IDUSUARIO INT NOT NULL,
    CONTENIDO TEXT NOT NULL,
    FECHA_COMENTARIO DATETIME DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (ID_COMENTARIO),
    FOREIGN KEY (ID_PUBLICACION) REFERENCES PUBLICACIONES_USUARIOS(ID_PUBLICACION) ON DELETE CASCADE,
    FOREIGN KEY (IDUSUARIO) REFERENCES USUARIO(IDUSUARIO) ON DELETE CASCADE
);

-- FOLLOWERS table - Manages follow relationships between users
CREATE TABLE IF NOT EXISTS SEGUIDORES (
    IDUSUARIO_SEGUIDOR INT NOT NULL,
    IDUSUARIO_SEGUIDO INT NOT NULL,
    FECHA_SEGUIMIENTO DATETIME DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (IDUSUARIO_SEGUIDOR, IDUSUARIO_SEGUIDO),
    FOREIGN KEY (IDUSUARIO_SEGUIDOR) REFERENCES USUARIO(IDUSUARIO) ON DELETE CASCADE,
    FOREIGN KEY (IDUSUARIO_SEGUIDO) REFERENCES USUARIO(IDUSUARIO) ON DELETE CASCADE,
    CONSTRAINT CHK_SELF_FOLLOW CHECK (IDUSUARIO_SEGUIDOR != IDUSUARIO_SEGUIDO)
);

-- NOTIFICATIONS table - User notification system
CREATE TABLE IF NOT EXISTS NOTIFICACIONES (
    ID_NOTIFICACION INT AUTO_INCREMENT,
    IDUSUARIO_DESTINO INT NOT NULL,
    IDUSUARIO_ORIGEN INT,
    TIPO_NOTIFICACION ENUM('like', 'comentario', 'seguimiento', 'sistema') NOT NULL,
    LEIDA BOOLEAN DEFAULT FALSE,
    FECHA_NOTIFICACION DATETIME DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (ID_NOTIFICACION),
    FOREIGN KEY (IDUSUARIO_DESTINO) REFERENCES USUARIO(IDUSUARIO) ON DELETE CASCADE,
    FOREIGN KEY (IDUSUARIO_ORIGEN) REFERENCES USUARIO(IDUSUARIO) ON DELETE SET NULL
);

-- MESSAGES table - Private messaging system between users
CREATE TABLE IF NOT EXISTS MENSAJES (
    ID_MENSAJE INT AUTO_INCREMENT,
    IDUSUARIO_ORIGEN INT NOT NULL,
    IDUSUARIO_DESTINO INT NOT NULL,
    CONTENIDO TEXT NOT NULL,
    LEIDO BOOLEAN DEFAULT FALSE,
    FECHA_MENSAJE DATETIME DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (ID_MENSAJE),
    FOREIGN KEY (IDUSUARIO_ORIGEN) REFERENCES USUARIO(IDUSUARIO) ON DELETE CASCADE,
    FOREIGN KEY (IDUSUARIO_DESTINO) REFERENCES USUARIO(IDUSUARIO) ON DELETE CASCADE
);

-- Create indexes to improve performance
CREATE INDEX idx_publicaciones_fecha ON PUBLICACIONES_USUARIOS(FECHA_CREACION);
CREATE INDEX idx_comentarios_fecha ON COMENTARIOS(FECHA_COMENTARIO);
CREATE INDEX idx_interacciones_fecha ON INTERACCIONES(FECHA_INTERACCION);
CREATE INDEX idx_notificaciones_usuario ON NOTIFICACIONES(IDUSUARIO_DESTINO, LEIDA);
CREATE INDEX idx_mensajes_receptor ON MENSAJES(IDUSUARIO_RECEPTOR, LEIDO);
CREATE INDEX idx_usuarios_juegos ON USUARIOS_JUEGOS(IDUSUARIO, FAVORITO);
CREATE INDEX usuarioidx_remember_token ON usuario (REMEMBER_TOKEN);

-- Insert reaction emotes to the table
INSERT INTO REACCIONES (REACCION, EMOJI) VALUES 
('Me gusta', '👍'),
('Me encanta', '❤️'),
('Me divierte', '😂'),
('Me asombra', '😮'),
('Me entristece', '😢'),
('Me enfada', '😠');

-- Insert game categories into the CATEGORIAS table
INSERT INTO CATEGORIAS (CATEGORIA) VALUES 
('Acción'),
('Aventura'),
('RPG'),
('Estrategia'),
('Simulación'),
('Deportes'),
('Carreras'),
('Shooter'),
('Plataformas'),
('Puzzle'),
('Survival Horror'),
('MMORPG'),
('Battle Royale'),
('Mundo abierto'),
('Sandbox'),
('Indie'),
('Educativos'),
('Música y ritmo'),
('Fighting'),
('Hack and Slash'),
('Beat em up'),
('Roguelike'),
('Metroidvania'),
('Stealth'),
('Tower Defense'),
('Visual Novel'),
('Point and Click'),
('Conducción'),
('Survival'),
('Card Game'),
('MOBA'),
('RTS'),
('Turnos'),
('Construcción'),
('Gestión'),
('Rol táctico'),
('Lucha'),
('Arcade'),
('Realidad Virtual'),
('Realidad Aumentada');